<?xml version="1.0"?>
<configuration>
  <configSections>
    <section name="Sonar" type="Infragravity.Sonar.SonarConfigurationSection, Sonar"/>
  </configSections>
  <Sonar>
    <Servers/>
    <Schedules/>
    <Queries>
        <add name="mssql_io_history" type="sql"
        filter="SELECT
                DB_NAME(fs.database_id) AS [Database Name],
                mf.physical_name,
                io_stall_read_ms,
                num_of_reads,
                CAST(io_stall_read_ms/(1.0 + num_of_reads) AS NUMERIC(10,1)) AS [avg_read_stall_ms],io_stall_write_ms,
                num_of_writes,
                CAST(io_stall_write_ms/(1.0+num_of_writes) AS NUMERIC(10,1)) AS [avg_write_stall_ms],
                io_stall_read_ms + io_stall_write_ms AS [io_stalls],
                num_of_reads + num_of_writes AS [total_io],
                CAST((io_stall_read_ms + io_stall_write_ms)/(1.0 + num_of_reads + num_of_writes) AS NUMERIC(10,1)) AS [avg_io_stall_ms]
                FROM sys.dm_io_virtual_file_stats(null,null) AS fs
                INNER JOIN sys.master_files AS mf
                ON fs.database_id = mf.database_id
                AND fs.[file_id] = mf.[file_id]
                ORDER BY avg_io_stall_ms DESC;">
                <Tags>
                    <add name="Database" value="Database Name"/>
                </Tags>
                <Values>
                </Values>
        </add>
        <add name="mssql_cpu_history" type="sql"
        filter="SET NOCOUNT ON;
                SET ARITHABORT ON;
                SET QUOTED_IDENTIFIER ON;
                SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;

                DECLARE @ms_ticks bigint;
                SET @ms_ticks = (Select ms_ticks From sys.dm_os_sys_info);
                DECLARE @maxEvents int = 1

                SELECT
                ---- measurement
                measurement = 'CPU percent'
                ---- tags
                , servername= REPLACE(@@SERVERNAME, '\', ':')
                , type = 'CPU_usage'
                -- value
                , [SQL_process] = ProcessUtilization
                , [External_process]= 100 - SystemIdle - ProcessUtilization
                , [SystemIdle]
                FROM
                (
                SELECT TOP (@maxEvents)
                EventTime = CAST(DateAdd(ms, -1 * (@ms_ticks - timestamp_ms), GetUTCDate()) as datetime)
                , ProcessUtilization = CAST(ProcessUtilization as int)
                , SystemIdle = CAST(SystemIdle as int)
                FROM (SELECT Record.value('(./Record/SchedulerMonitorEvent/SystemHealth/SystemIdle)[1]', 'int') as SystemIdle,
                            Record.value('(./Record/SchedulerMonitorEvent/SystemHealth/ProcessUtilization)[1]', 'int') as ProcessUtilization,
                            timestamp as timestamp_ms
                FROM (SELECT timestamp, convert(xml, record) As Record
                        FROM sys.dm_os_ring_buffers
                        WHERE ring_buffer_type = N'RING_BUFFER_SCHEDULER_MONITOR'
                            And record Like '&#37;&lt;SystemHealth&gt;&#37;') x) y
                ORDER BY timestamp_ms Desc
                ) as T;">
                <Instances>
                    <add name="measurement" value="measurement" />               
                </Instances>
                <Tags>
                    <add name="Name" value="servername"/>
                </Tags>
                 <Values>
                    <add name="SQL_process" value="auto"/>
                    <add name="External_process" value="auto"/>
                    <add name="SystemIdle" value="auto"/>
                </Values>
        </add>
        <add name="mssql_perf_stats" type="sql"
	    filter="select replace(rtrim(counter_name),' ','_') as counter_name, replace(rtrim(instance_name),' ','_') as instance_name,cntr_value from sys.dm_os_performance_counters where (counter_name in ('SQL Compilations/sec','SQL Re-Compilations/sec','User Connections','Batch Requests/sec','Logouts/sec','Logins/sec','Processes blocked','Latch Waits/sec','Full Scans/sec','Index Searches/sec','Page Splits/sec','Page Lookups/sec','Page Reads/sec','Page Writes/sec','Readahead Pages/sec','Lazy Writes/sec','Checkpoint Pages/sec','Database Cache Memory (KB)','Log Pool Memory (KB)','Optimizer Memory (KB)','SQL Cache Memory (KB)','Connection Memory (KB)','Lock Memory (KB)', 'Memory broker clerk size','Page life expectancy')) or (instance_name in ('_Total','Column store object pool') and counter_name in ('Transactions/sec','Write Transactions/sec','Log Flushes/sec','Log Flush Wait Time','Lock Timeouts/sec','Number of Deadlocks/sec','Lock Waits/sec','Latch Waits/sec','Memory broker clerk size','Log Bytes Flushed/sec','Bytes Sent to Replica/sec','Log Send Queue','Bytes Sent to Transport/sec','Sends to Replica/sec','Bytes Sent to Transport/sec','Sends to Transport/sec','Bytes Received from Replica/sec','Receives from Replica/sec','Flow Control Time (ms/sec)','Flow Control/sec','Resent Messages/sec','Redone Bytes/sec') or (object_name = 'SQLServer:Database Replica' and counter_name in ('Log Bytes Received/sec','Log Apply Pending Queue','Redone Bytes/sec','Recovery Queue','Log Apply Ready Queue') and instance_name = '_Total')) or (object_name = 'SQLServer:Database Replica' and counter_name in ('Transaction Delay'))">
            <Tags>
                <add name="Name" value="instance_name"/>
            </Tags>
            <Instances>
                <add name="counter_name" value="counter_name" />
                <!--<add name="instance_name" value="" />-->
            </Instances>
            <Values>
                <add name="cntr_value" value="auto"/>
            </Values>
        </add>
        <add name="mssql_wait_stats" type="sql"
        filter="WITH WaitCategoryStats ( wait_category, wait_type, wait_time_ms, waiting_tasks_count, max_wait_time_ms) AS ( SELECT CASE WHEN wait_type LIKE 'LCK%' THEN 'LOCKS' WHEN wait_type LIKE 'PAGEIO%' THEN 'PAGE I/O LATCH' WHEN wait_type LIKE 'PAGELATCH%' THEN 'PAGE LATCH (non-I/O)' WHEN wait_type LIKE 'LATCH%' THEN 'LATCH (non-buffer)' WHEN wait_type LIKE 'LATCH%' THEN 'LATCH (non-buffer)' ELSE wait_type END AS wait_category, wait_type, wait_time_ms, waiting_tasks_count, max_wait_time_ms FROM sys.dm_os_wait_stats WHERE wait_type NOT IN ('LAZYWRITER_SLEEP', 'CLR_AUTO_EVENT' , 'CLR_MANUAL_EVENT', 'REQUEST_FOR_DEADLOCK_SEARCH', 'BACKUPTHREAD', 'CHECKPOINT_QUEUE' , 'EXECSYNC', 'FFT_RECOVERY', 'SNI_CRITICAL_SECTION', 'SOS_PHYS_PAGE_CACHE' , 'CXROWSET_SYNC', 'DAC_INIT', 'DIRTY_PAGE_POLL', 'PWAIT_ALL_COMPONENTS_INITIALIZED' , 'MSQL_XP', 'WAIT_FOR','DBMIRRORING_CMD','DBMIRROR_DBM_EVENT','DBMIRROR_EVENTS_QUEUE','DBMIRROR_WORKER_QUEUE', 'XE_TIMER_EVENT','XE_DISPATCHER_WAIT','WAITFOR_TASKSHUTDOWN','WAIT_FOR_RESULTS' ,'SQLTRACE_INCREMENTAL_FLUSH_SLEEP','WAITFOR' ,'QDS_CLEANUP_STALE_QUERIES_TASK_MAIN_LOOP_SLEEP','QDS_PERSIST_TASK_MAIN_LOOP_SLEEP','HADR_FILESTREAM_IOMGR_IOCOMPLETION','LOGMGR_QUEUE','FSAGENT' ) AND wait_type NOT LIKE 'PREEMPTIVE%' AND wait_type NOT LIKE 'SQLTRACE%' AND wait_type NOT LIKE 'SLEEP%' AND wait_type NOT LIKE 'FT_%' AND wait_type NOT LIKE 'XE%' AND wait_type NOT LIKE 'BROKER%' AND wait_type NOT LIKE 'DISPATCHER%' AND wait_type NOT LIKE 'PWAIT%' AND wait_type NOT LIKE 'SP_SERVER%') select  wait_category, sum(wait_time_ms) as wait_time_ms, sum(waiting_tasks_count) as waiting_tasks_count, max(max_wait_time_ms) as max_wait_time_ms from WaitCategoryStats where wait_time_ms >100 group by wait_category">
            <Tags>
            </Tags>
            <Instances>
                <add name="wait_category" value="wait_category" />
                <!--<add name="instance_name" value="" />-->
            </Instances>
            <Values>
                <add name="wait_time_ms" value="wait_time_ms"/>
                <add name="waiting_tasks_count" value="waiting_tasks_count" />
                <add name="max_wait_time_ms" value="max_wait_time_ms" />
            </Values>
        </add>             
    </Queries>
  </Sonar>
 </configuration>
